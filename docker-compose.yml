version: "3.8"

services:
  postgres:
    image: postgres:17.0-alpine3.20
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    env_file:
      - .env
    ports:
      - "127.0.0.1:5433:5432"  # Restrict to localhost
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d  # For initialization scripts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      homepi:
        ipv4_address: 172.19.0.10

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    security_opt:
      - no-new-privileges:true
    privileged: false  # Remove privileged mode for security
    ports:
      - "127.0.0.1:9001:9000"
    volumes:
      - portainer_data:/data  # Use named volume instead of bind mount
      - /var/run/docker.sock:/var/run/docker.sock:ro  # Read-only access
    restart: unless-stopped
    networks:
      homepi:
        ipv4_address: 172.19.0.11

  minio:
    container_name: minio
    image: minio/minio:latest
    restart: unless-stopped
    user: "${UID}:${GID}"  # Run as non-root
    networks:
      homepi:
        ipv4_address: 172.19.0.12
    ports:
      - "127.0.0.1:9000:9000"
      - "127.0.0.1:9090:9090"
    volumes:
      - minio_storage:/data
    env_file:
      - .env
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BROWSER_REDIRECT_URL: http://127.0.0.1:9090
    command: server --console-address ":9090" /data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 10s

  cache:
    image: redis:7-alpine
    container_name: redis-cache
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "127.0.0.1:6379:6379"
    env_file:
      - .env
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=6379
      - REDIS_DATABASES=16
    volumes:
      - cache:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      homepi:
        ipv4_address: 172.19.0.13

networks:
  homepi:
    external: true
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/16

volumes:
  postgres-data:
    driver: local
  portainer_data:
    driver: local
  minio_storage:
    driver: local
  cache:
    driver: local
